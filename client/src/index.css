@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap');
@import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css');

@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0, 0, 0, .10);
  --badge-outline: rgba(0, 0, 0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8;
  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0, 0, 0, .03);
  --elevate-2: rgba(0, 0, 0, .08);

  --background: hsl(0 0% 100%);
  --foreground: hsl(222.2 84% 4.9%);
  --border: hsl(214.3 31.8% 91.4%);
  --card: hsl(0 0% 100%);
  --card-foreground: hsl(222.2 84% 4.9%);
  --card-border: hsl(214.3 31.8% 91.4%);
  --sidebar: hsl(0 0% 100%);
  --sidebar-foreground: hsl(222.2 84% 4.9%);
  --sidebar-border: hsl(214.3 31.8% 91.4%);
  --sidebar-primary: hsl(217.2 91.2% 59.8%);
  --sidebar-primary-foreground: hsl(222.2 84% 4.9%);
  --sidebar-accent: hsl(210 40% 96%);
  --sidebar-accent-foreground: hsl(222.2 84% 4.9%);
  --sidebar-ring: hsl(217.2 91.2% 59.8%);
  --popover: hsl(0 0% 100%);
  --popover-foreground: hsl(222.2 84% 4.9%);
  --popover-border: hsl(214.3 31.8% 91.4%);
  --primary: hsl(217.2 91.2% 59.8%);
  --primary-foreground: hsl(222.2 84% 4.9%);
  --secondary: hsl(210 40% 96%);
  --secondary-foreground: hsl(222.2 84% 4.9%);
  --muted: hsl(210 40% 96%);
  --muted-foreground: hsl(215.4 16.3% 46.9%);
  --accent: hsl(210 40% 96%);
  --accent-foreground: hsl(222.2 84% 4.9%);
  --destructive: hsl(0 84.2% 60.2%);
  --destructive-foreground: hsl(210 40% 98%);
  --input: hsl(214.3 31.8% 91.4%);
  --ring: hsl(217.2 91.2% 59.8%);
  --chart-1: hsl(217.2 91.2% 59.8%);
  --chart-2: hsl(139 69% 55%);
  --chart-3: hsl(48 96% 64%);
  --chart-4: hsl(0 84% 60%);
  --chart-5: hsl(271 91% 65%);

  --font-sans: 'Inter', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  --font-serif: 'Georgia', serif;
  --font-mono: 'Courier New', monospace;
  --radius: 0.75rem;
  --shadow-2xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.05);
  --shadow-xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.05);
  --shadow-sm: 0px 1px 3px 0px hsl(0 0% 0% / 0.1), 0px 1px 2px -1px hsl(0 0% 0% / 0.1);
  --shadow: 0px 1px 3px 0px hsl(0 0% 0% / 0.1), 0px 1px 2px -1px hsl(0 0% 0% / 0.1);
  --shadow-md: 0px 4px 6px -1px hsl(0 0% 0% / 0.1), 0px 2px 4px -2px hsl(0 0% 0% / 0.1);
  --shadow-lg: 0px 10px 15px -3px hsl(0 0% 0% / 0.1), 0px 4px 6px -4px hsl(0 0% 0% / 0.1);
  --shadow-xl: 0px 20px 25px -5px hsl(0 0% 0% / 0.1), 0px 8px 10px -6px hsl(0 0% 0% / 0.1);
  --shadow-2xl: 0px 25px 50px -12px hsl(0 0% 0% / 0.5);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased;
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
    transition: var(--theme-transition);
  }

  html {
    scroll-behavior: smooth;
    transition: var(--theme-transition);
  }

  /* Smooth theme transitions for all elements */
  *,
  *::before,
  *::after {
    transition-property: background-color, border-color, color, fill, stroke, box-shadow;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
  }

  /* Prevent transition on page load */
  .preload * {
    transition: none !important;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }

  /* Custom classes for portfolio */
  .glass {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    transition: var(--theme-transition);
  }

  .dark .glass {
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .gradient-text {
    background: linear-gradient(135deg, #3b82f6, #8b5cf6);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    transition: var(--theme-transition);
  }

  .skill-bar::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    background: linear-gradient(90deg, #3b82f6, #8b5cf6);
    border-radius: inherit;
    transition: width 2s ease-out;
  }

  .text-shadow {
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition: var(--theme-transition);
  }

  .dark .text-shadow {
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  }

  .project-card {
    transition: all 0.3s ease;
  }

  .project-card:hover {
    transform: translateY(-10px) scale(1.02);
    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
  }

  .dark .project-card:hover {
    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.3);
  }

  /* Theme toggle button improvements */
  .theme-toggle-icon {
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .theme-toggle-entering {
    transform: rotate(0deg) scale(1);
    opacity: 1;
  }

  .theme-toggle-exiting {
    transform: rotate(180deg) scale(0);
    opacity: 0;
  }

  /* Animations */
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }

    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }

    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes bounceGentle {

    0%,
    100% {
      transform: translateY(0);
    }

    50% {
      transform: translateY(-10px);
    }
  }

  @keyframes pulseRing {
    0% {
      transform: scale(0.8);
      opacity: 1;
    }

    100% {
      transform: scale(2);
      opacity: 0;
    }
  }

  @keyframes float {

    0%,
    100% {
      transform: translateY(0px);
    }

    50% {
      transform: translateY(-20px);
    }
  }

  @keyframes glow {
    0% {
      box-shadow: 0 0 20px rgba(59, 130, 246, 0.3);
    }

    100% {
      box-shadow: 0 0 30px rgba(59, 130, 246, 0.6);
    }
  }

  @keyframes themeSwitch {
    0% {
      opacity: 1;
      transform: rotate(0deg) scale(1);
    }

    50% {
      opacity: 0;
      transform: rotate(90deg) scale(0.8);
    }

    100% {
      opacity: 1;
      transform: rotate(180deg) scale(1);
    }
  }

  .animate-fade-in {
    animation: fadeIn 0.6s ease-out;
  }

  .animate-slide-up {
    animation: slideUp 0.6s ease-out;
  }

  .animate-bounce-gentle {
    animation: bounceGentle 0.6s ease-out;
  }

  .animate-pulse-ring {
    animation: pulseRing 2s infinite;
  }

  .animate-float {
    animation: float 3s ease-in-out infinite;
  }

  .animate-glow {
    animation: glow 2s ease-in-out infinite alternate;
  }

  .animate-theme-switch {
    animation: themeSwitch 0.6s ease-in-out;
  }

  /* Prevent flash of unstyled content during theme transitions */
  .theme-transitioning * {
    transition: none !important;
  }

  /* Smooth scrolling improvements */
  @media (prefers-reduced-motion: no-preference) {
    html {
      scroll-behavior: smooth;
    }
  }

  /* Accessibility improvements for theme toggle */
  .theme-toggle:focus-visible {
    outline: 2px solid hsl(var(--ring));
    outline-offset: 2px;
  }
}

/* Add this to your existing index.css to fix theme switching */

/* Ensure smooth theme transitions */
* {
  transition-property: background-color, border-color, color, fill, stroke;
  transition-duration: 0.3s;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

/* Force theme colors to update immediately */
:root,
:root.light,
:root.dark,
[data-theme="light"],
[data-theme="dark"] {
  color-scheme: light;
}

:root.dark,
[data-theme="dark"] {
  color-scheme: dark;
}

/* Ensure body updates with theme */
body {
  background-color: hsl(var(--background)) !important;
  color: hsl(var(--foreground)) !important;
}

/* Force update for all themed elements */
.bg-background {
  background-color: hsl(var(--background)) !important;
}

.bg-foreground {
  background-color: hsl(var(--foreground)) !important;
}

.bg-card {
  background-color: hsl(var(--card)) !important;
}

.bg-primary {
  background-color: hsl(var(--primary)) !important;
}

.bg-secondary {
  background-color: hsl(var(--secondary)) !important;
}

.bg-muted {
  background-color: hsl(var(--muted)) !important;
}

.bg-accent {
  background-color: hsl(var(--accent)) !important;
}

.text-foreground {
  color: hsl(var(--foreground)) !important;
}

.text-background {
  color: hsl(var(--background)) !important;
}

.text-primary {
  color: hsl(var(--primary)) !important;
}

.text-secondary {
  color: hsl(var(--secondary)) !important;
}

.text-muted-foreground {
  color: hsl(var(--muted-foreground)) !important;
}

.border-border {
  border-color: hsl(var(--border)) !important;
}

/* Fix for glass effect in both themes */
.glass {
  transition: all 0.3s ease;
}

.light .glass {
  background: rgba(255, 255, 255, 0.1) !important;
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.2) !important;
}

.dark .glass {
  background: rgba(255, 255, 255, 0.05) !important;
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.1) !important;
}
